syntax = "proto3";

option go_package = "github.com/barrettj12/500/remote";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// service Player is equivalent to the Go interface Player.
service Player {
	// NotifyPlayerNum(int)
  rpc NotifyPlayerNum(google.protobuf.Int32Value) returns (google.protobuf.Empty);
	// NotifyHand(*c.List[Card])
  rpc NotifyHand(Hand) returns (google.protobuf.Empty);
	// NotifyBid(player int, bid Bid)
	// NotifyBidWinner(player int, bid Bid)
	// NotifyPlay(player int, card Card)
  rpc NotifyPlay(PlayInfo) returns (google.protobuf.Empty);
	// NotifyTrickWinner(player int)
  rpc NotifyTrickWinner(google.protobuf.Int32Value) returns (google.protobuf.Empty);
	// NotifyHandResult(res HandResult)

	// Bid() Bid
	// Drop3() *c.Set[int]
	// Play(trick *c.List[playInfo], validPlays *c.List[int]) int
  rpc Play(PlayRequest) returns (google.protobuf.Int32Value);
	// JokerSuit() Suit
}

message Hand {
  repeated Card hand = 1;
}

message PlayRequest {
  // trick *c.List[playInfo]
  repeated PlayInfo trick = 1;
  // validPlays *c.List[int]
  repeated int32 validPlays = 2;
}

// message PlayInfo is equivalent to the Go interface playInfo.
message PlayInfo {
  // player int
  int32 player = 1;
  // card Card
  Card card = 2;
}

// message Card is equivalent to the Go struct Card.
message Card {
  // rank Rank
  Rank rank = 1;
	// suit Suit
  Suit suit = 2;
}

enum Rank {
  NO_RANK = 0;
  ACE = 1;
  TWO = 2;
  THREE = 3;
  FOUR = 4;
  FIVE = 5;
  SIX = 6;
  SEVEN = 7;
  EIGHT = 8;
  NINE = 9;
  TEN = 10;
  JACK = 11;
  QUEEN = 12;
  KING = 13;
  JOKER = 14;
}

enum Suit {
  NO_SUIT = 0;
  SPADES = 1;
  CLUBS = 2;
  DIAMONDS = 3;
  HEARTS = 4;
}